<?php
 /**
  * Hook_theme
  * 
  * @return Array
  */
 function lokalkoenig_node_theme(){

 $themes = array ('lk_node_vku_info' => array(
            'template' => 'templates/lk_node_vku_info', // your template file called custompage.tpl.php
            'variables' => array(
              'vku' => null,
              'node' => null,
              'info' => null 
            ),
        ),
    );
 
 
  $themes["lk_vku_usage"] = array(
            'template' => 'templates/lk_vku_usage',
            'variables' => array(
              'account' => NULL,
              'entries' => array(),
              'class' => 'well clearfix'
            )
   );
   
   $themes["lk_vku_lizenz_usage"] = array(
            'template' => 'templates/lk_vku_lizenz_usage',
            'variables' => array(
              'in' => array(),
              'out' => array(),
              'count' => 0,
              'account' => NULL,
              'class' => 'well clearfix'
              )
            ); 
 
return $themes; 
}


/**
  * Hook_menu
  * 
  * @return Array
  */
function lokalkoenig_node_menu(){
      
    $items['nodeaccess/%node'] = array(
      'access callback' => 'lk_vku_access',
      'page callback' => '_lokalkoenig_nodeaccess_info',
      'page arguments' => array(1),
      'title' => 'Node-Access-Test',
      'type' => MENU_LOCAL_TASK);   
   
 return $items;     
}

/**
 * Gives back Use-Information about the Kampagne
 * 
 * @param stdClass $node
 */
function _lokalkoenig_nodeaccess_info($node){
  $manager = \LK\Kampagne\Manager\Access::createManager($node -> nid);
  print $manager->getUsageInfoVerlag();
  drupal_exit();
}
  

function lokalkoenig_node_node_view($node, $view_mode, $langcode){
  
  if($view_mode == 'full'){
    if($node -> type == 'kampagne' 
      && $node -> status == 0){
       pathtitle("node/x/preview");
     }
  }
  
  if($node -> type == "kampagne" && in_array($view_mode, array('grid', 'teaser','full'))){
    $kampagne = new \LK\Kampagne\Kampagne($node);
    $manager = new \LK\Kampagne\Manager\KampagnenView($kampagne);
    $manager ->setMode($view_mode);
  }
} 


/**
 * Hook Delete
 * 
 * @param stdClass $node
 */
function lokalkoenig_node_node_delete($node){
    // Gehe alles durch und lösche alle Verbindungs-Entities
    if($node -> type == 'kampage') {
        $kampagne = new LK\Kampagne\Kampagne($node);
        $kampagne ->remove();
    }
}


function _lk_check_node_kampagne(&$variables, $node){
   if($node -> type == "kampagne"){
      // teaser + full  
      if(isset($node -> vmode)){
        $variables['theme_hook_suggestions'][] = 'node__kampagne__' . $node -> vmode; 
      }
      elseif(in_array($variables["view_mode"], array('full', 'proof'))){
         $taxos = _lokalkeonig_get_missing_mediums($node);
         
         if($taxos["incomplete"]){
            drupal_set_message('Sie haben noch nicht alle notwendigen Medien hochgeladen.');
            drupal_goto('node/' . $node -> nid . '/media');
         }
         
         if(lk_is_agentur()){
            $form = drupal_get_form('lk_kampagnen_submit_form', $node);
            $node -> submitform = drupal_render($form); 
         }
         
         
         if($node -> status){
            $variables['theme_hook_suggestions'][] = 'node__kampagne__online'; 
         }
         else $variables['theme_hook_suggestions'][] = 'node__kampagne__new'; 
      }
   }
}

/**
 * Node-Access Hook
 * Determine if the user has Access to the Node
 * 
 * @param type $node
 * @param type $op
 * @param type $account
 * @return boolean
 */
function lokalkoenig_node_node_access($node, $op, $account) {
  $type = is_string($node) ? $node : $node->type;
  
  if($type == "page" AND !user_is_logged_in()){
      if(is_object($node) AND in_array($node -> nid, array(81, 257, 99))){
         return NODE_ACCESS_DENY;
      }
  }
  
  if($type == "kampagne" AND $op == 'view'){
    
    // Wenn Anonym
    if(user_is_anonymous()){
      drupal_set_message("Bitte melden Sie sich mit Ihren persönlichen Zugangsdaten an.");
      drupal_goto("user", array("query" => array("destination" => "node/" . $node -> nid)));
      drupal_exit();
    }
    
    if(lk_is_agentur($account)){
       if($node -> uid != $account -> uid){
          return NODE_ACCESS_DENY;
       }
       else {
         return NODE_ACCESS_ALLOW;
       }
    }
  }
  
  // Returning nothing from this function would have the same effect.
  return NODE_ACCESS_IGNORE;
}


/**
 * Laedt Nodes from the Database and attach Access-Information
 * 
 * @param Array $nodes
 * @param Array $types
 */
function lokalkoenig_node_node_load($nodes, $types) {
  $types_we_want_to_process = array('kampagne');
  if (count(array_intersect($types_we_want_to_process, $types))) {
    while(list($nid, $node) = each($nodes)):
        new \LK\Kampagne\Kampagne($node);
    
    endwhile;
  }
}

/**
 * Computes the Search field
 * 
 * @param array $entity_field
 * @param type $entity_type
 * @param type $entity
 * @param type $field
 * @param type $instance
 * @param type $langcode
 * @param type $items
 */
function computed_field_field_kamp_suche_compute(&$entity_field, $entity_type, 
  $entity, $field, $instance, $langcode, $items){
  
  $k = new \LK\Kampagne\Search\SearchText(($entity));
  $entity_field[0]["value"] = $k->getSearchString();
}

/**
 * Gets the Status of a Kampagne
 * 
 * @param string $entity_field
 * @param type $entity_type
 * @param type $entity
 * @param type $field
 * @param type $instance
 * @param type $langcode
 * @param type $items
 */
function computed_field_field_kamp_status_compute(&$entity_field, $entity_type, 
  $entity, $field, $instance, $langcode, $items){

  if(isset($entity -> is_new) AND $entity -> is_new){
    $entity_field[0]["value"] = 'new';
  }
}
